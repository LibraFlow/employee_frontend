image: node:18

stages:
  - build
#  - quality
  - test

build:
  stage: build
  script:
    - cd employee_frontend
    - npm install
    - $env:CI = "false"; npm run build
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  only:
    - main
    - develop
    - merge_requests

# quality:
#   stage: quality
#   script:
#     - cd employee_frontend
#     - npm install
#     # Run ESLint for code quality checks and generate report
#     - npm run lint -- --output-file eslint-report.html --format html
#     # Run ESLint with --fix to automatically fix issues where possible
#     - npm run lint:fix
#     # Run security audit
#     - npm audit --audit-level=moderate
#   artifacts:
#     when: always
#     expire_in: 1 week
#     paths:
#       - employee_frontend/eslint-report.html
#   allow_failure: true
#   only:
#     - main
#     - develop
#     - merge_requests

# test:
#   stage: test
#   script:
#     - cd employee_frontend
#     - npm install
#     - npm test -- --passWithNoTests
#   only:
#     - main
#     - develop
#     - merge_requests

e2e-integration:
  stage: test
  script:
    - docker-compose -f docker-compose.e2e.yml up -d --build
    # Wait for frontend
    - |
      $maxAttempts = 30
      $attempt = 0
      while ($attempt -lt $maxAttempts) {
        $attempt++
        try {
          $response = Invoke-WebRequest -Uri "http://localhost:3001" -UseBasicParsing -TimeoutSec 2
          if ($response.StatusCode -eq 200) { break }
        } catch { }
        Start-Sleep -Seconds 5
      }
    # Wait for API Gateway
    - |
      $maxAttempts = 30
      $attempt = 0
      while ($attempt -lt $maxAttempts) {
        $attempt++
        try {
          $response = Invoke-WebRequest -Uri "http://localhost:3000/health" -UseBasicParsing -TimeoutSec 2
          if ($response.StatusCode -eq 200) { break }
        } catch { }
        Start-Sleep -Seconds 5
      }
    # Additional wait to ensure services are fully stable
    - Start-Sleep -Seconds 60
    - cd employee_frontend
    - npm install
    - npx cypress run
  after_script:
    - docker-compose -f docker-compose.e2e.yml down
  only:
    - main
    - develop
    - merge_requests